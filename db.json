{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-nexmoe/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/js/copy-codeblock.js","path":"js/copy-codeblock.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/js/app.js","path":"js/app.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/lax.min.js","path":"lib/lax.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/preset/plain.styl","path":"preset/plain.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/fancybox/fancybox.css","path":"lib/fancybox/fancybox.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/fancybox/fancybox.umd.js","path":"lib/fancybox/fancybox.umd.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/demo.css","path":"lib/iconfont/demo.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/demo_index.html","path":"lib/iconfont/demo_index.html","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.css","path":"lib/iconfont/iconfont.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.js","path":"lib/iconfont/iconfont.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.json","path":"lib/iconfont/iconfont.json","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.eot","path":"lib/iconfont/iconfont.eot","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.svg","path":"lib/iconfont/iconfont.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.ttf","path":"lib/iconfont/iconfont.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.woff","path":"lib/iconfont/iconfont.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.woff2","path":"lib/iconfont/iconfont.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/mdui_043tiny/mdui.css","path":"lib/mdui_043tiny/mdui.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/mdui_043tiny/mdui.js","path":"lib/mdui_043tiny/mdui.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7480b8cfc3dc775aa1e9e9c1664698b982a6cd0e","modified":1724730132964},{"_id":"node_modules/hexo-theme-nexmoe/.eslintignore","hash":"1d606028dff10b1a8c635142235182379dc3c64e","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/.eslintrc.json","hash":"ca45d8e5d80ad6b7004cddacae7fc7d8040b2d6f","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/LICENSE","hash":"b314c7ebb7d599944981908b7f3ed33a30e78f3a","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/README.md","hash":"7e77fc64595bc4afe6a56ebe0fe525a874b4f017","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/crowdin.yml","hash":"f9f02a9cab975c7de721c5dc4179b77870019cc6","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/index.js","hash":"f3d92ae5f32a9aee66f8b24083a2004d69a2b761","modified":1724716550006},{"_id":"node_modules/hexo-theme-nexmoe/package.json","hash":"5f5c79d7fdaa58fa87142085f1f010762afdd643","modified":1724716550026},{"_id":"node_modules/hexo-theme-nexmoe/renovate.json","hash":"767b077c7b615e20af3cf865813cd64674a9bea6","modified":1724716550026},{"_id":"node_modules/hexo-theme-nexmoe/.github/release-drafter.yml","hash":"9be21d7a486404050224d61415226e1ba321f169","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/demo/_config.nexmoe.yml","hash":"8f508665b4512954103e04e1e86f9ebfe30e7748","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/demo/_config.yml","hash":"f5a551599d83995e0dbc4719e7950fa889b3dc64","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/demo/package.json","hash":"883603a5be41686e89c26519e5bfe097343edcc6","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/include/README.md","hash":"912c1a78db7138e3ff6e1ce622dd00e3bfb1afab","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/include/config.js","hash":"f26ff9408ca6ce956ef40ac6c6996da36c9df67d","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/include/dependency.js","hash":"ed975738b982c19565bc2869a51277723fd23e6b","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/include/register.js","hash":"446119e7fbc44da8d0fc8c3628c14fadb225c558","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/languages/default.yml","hash":"c76f93c3c0ac4582694e330647f2fe424930ec3a","modified":1724716550006},{"_id":"node_modules/hexo-theme-nexmoe/languages/en.yml","hash":"1a2ab324edb076988fa7a098d2b011d80738a047","modified":1724716550006},{"_id":"node_modules/hexo-theme-nexmoe/languages/it.yml","hash":"334afb6a7967d71ebd2fb32bdd1f8b20174c82bd","modified":1724716550006},{"_id":"node_modules/hexo-theme-nexmoe/languages/ja.yml","hash":"773c3b0464771c6d5149a2175bb9d7eaceb755ea","modified":1724716550006},{"_id":"node_modules/hexo-theme-nexmoe/languages/zh-CN.yml","hash":"b30de168c5bc226cdb9dbd7358b7b0d33a34e1d5","modified":1724716550006},{"_id":"node_modules/hexo-theme-nexmoe/languages/zh-HK.yml","hash":"6b6ada7b425c137cd51edc2f4890b96a21482558","modified":1724716550006},{"_id":"node_modules/hexo-theme-nexmoe/languages/zh-TW.yml","hash":"e4ababddda52aa89f0fd51909c2211bcd10abb53","modified":1724716550006},{"_id":"node_modules/hexo-theme-nexmoe/languages/zh.yml","hash":"81aa48d1ada886cb10f5a195c3afb250f962f3ac","modified":1724716550006},{"_id":"node_modules/hexo-theme-nexmoe/layout/archives.ejs","hash":"93ffaf937dacf8f1b888ad20470ce2d8b8c6673b","modified":1724730683184},{"_id":"node_modules/hexo-theme-nexmoe/layout/index.jsx","hash":"20373ddf76f6d59dde51833e754c9f70cc804f77","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/layout.jsx","hash":"e347c8e933b3e496add81502c1a2e229b0042f73","modified":1724716550008},{"_id":"node_modules/hexo-theme-nexmoe/layout/post.ejs","hash":"c19844fccebbb7a1691847dbd3f725a06e409ee8","modified":1724717936064},{"_id":"node_modules/hexo-theme-nexmoe/layout/py.jsx","hash":"590216a1f66a2085d98544fe082c503ec3baa02e","modified":1724716550008},{"_id":"node_modules/hexo-theme-nexmoe/scripts/index.js","hash":"c00aba78d38330728dbbdbb0bae57f1b00a7de5e","modified":1724716550026},{"_id":"node_modules/hexo-theme-nexmoe/source/_config.yml","hash":"c09a5a5a10889ef15cbfad988474527ccad19546","modified":1724716550026},{"_id":"node_modules/hexo-theme-nexmoe/.github/ISSUE_TEMPLATE/bug_report_en.md","hash":"557484415c610222b16b58df470c2a768782c4fc","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/.github/ISSUE_TEMPLATE/bug_report_zh.md","hash":"d6c77dbb2a3d638d748280fb37dd29375aebe98c","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/.github/ISSUE_TEMPLATE/feature_request_en.md","hash":"803f6736473a122ed78867e64681defcd2edd954","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/.github/ISSUE_TEMPLATE/feature_request_zh.md","hash":"843abf5e1d7b06cb1feddd75f7025150d46a91c2","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/.github/workflows/npm-publish.yml","hash":"b57ce794238f61bb8223752e516970cd1b7732c9","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/.github/workflows/release-drafter.yml","hash":"ccbe1e1ae6ee3b2a7d32362791aa006afa95e94d","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/demo/.github/dependabot.yml","hash":"25b0257a0db2c5b6a5756d8990bc2cba12f54fc5","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/demo/scaffolds/draft.md","hash":"204ab550ddffa92051ea0eb2484a78d84dac3693","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/demo/scaffolds/page.md","hash":"f0af1cb10f27d859caa51c8e3704469d9ed842a6","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/demo/scaffolds/post.md","hash":"e7169dab8ce62d41e3734e30706fa786cc7d46f4","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/include/util/console.js","hash":"59cf9d277d3ac85a496689bd811b1c316001641d","modified":1724716550006},{"_id":"node_modules/hexo-theme-nexmoe/layout/_index/list.ejs","hash":"e98a95f50d6f9042302ec4fad62ac85c5336ba26","modified":1724716550006},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/background.jsx","hash":"05ee70bc00ddac592469a9e56cfdb9f683f130ef","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/head.ejs","hash":"c14cec07f778dbf643e51671e47c2e6e711045b8","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/paginator.jsx","hash":"9b1f26c6f899b1c66c65d7213137f02796b56236","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/right.ejs","hash":"e4db789fcf7f7dfe58e22c78ae30a5db2355cc47","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/searchbox.jsx","hash":"83714b79399e0bef913bef8c4dbef58e9dd875f2","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/archive.ejs","hash":"2c8c5ee017bfdd56cbb80c7796ef9393aea16d52","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/category.ejs","hash":"99113b9f2cb4ffefdda3e3a343647ac6a5083091","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/hitokoto.ejs","hash":"2c9c3567d2b5a99cdbca90673c638409529881db","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/link.ejs","hash":"61bc7a6018309f5b3525b451ccdd62e6664f7e74","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/recent_posts.ejs","hash":"7d9eaf8228eda803aa4956e55432f78e056d6a01","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/search.ejs","hash":"9771d5e03623a8892c23dab9b24360edbaf87233","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/social.ejs","hash":"133927c64cbe6f9cf6601e32be0b03ed576dfbf5","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/tag.ejs","hash":"ddf844f08124454bea2a30f8349b63f3cb63ac16","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/tagcloud.ejs","hash":"25e1af5116bd5cbf6c1d1e259a8564e21a3a28d5","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/scripts/helper/css_auto_version.js","hash":"354700a113aca785c82bd59a16901a2dff2a2580","modified":1724716550026},{"_id":"node_modules/hexo-theme-nexmoe/scripts/helper/image_filter.js","hash":"284c3f15eaba3ff6db42fe12f921fada5c6f24b4","modified":1724716550026},{"_id":"node_modules/hexo-theme-nexmoe/scripts/helper/js_auto_version.js","hash":"96e6d7d0dadd39198e33ec8d5f0331e4a600ca37","modified":1724716550026},{"_id":"node_modules/hexo-theme-nexmoe/scripts/tag/gallery.js","hash":"bc07b003bd405138ff4bca5fb03ba180fc29b92e","modified":1724716550026},{"_id":"node_modules/hexo-theme-nexmoe/scripts/tag/links.js","hash":"3676a23bdf32e0c1a933ccb8a79da6c5880a2e19","modified":1724716550026},{"_id":"node_modules/hexo-theme-nexmoe/source/css/style.styl","hash":"2021dacedfe0f6f2ed6fdf6a9e9c067fe792cde0","modified":1724716550028},{"_id":"node_modules/hexo-theme-nexmoe/source/js/copy-codeblock.js","hash":"51f1b526133258db1080826574c50a683a34c559","modified":1724716550028},{"_id":"node_modules/hexo-theme-nexmoe/source/js/search.js","hash":"eb69cd78f6ab8d3e83576dae29f09c9af0ffe8b9","modified":1724716550028},{"_id":"node_modules/hexo-theme-nexmoe/source/js/app.js","hash":"965c3befaa26a06484204b34f20b8770e186866a","modified":1724716550028},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/lax.min.js","hash":"1de100aa90834f1f4fae9a4deb44a73048fefff0","modified":1724716550029},{"_id":"node_modules/hexo-theme-nexmoe/source/preset/plain.styl","hash":"0413a4e36642110f0a23738d10f2874e6e43ed6d","modified":1724716550031},{"_id":"node_modules/hexo-theme-nexmoe/demo/source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/layout/_layout/nexmoe/body.jsx","hash":"7e63a37bcd01a67950fb4f52895bf9e6cf9f955b","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_layout/nexmoe/content.jsx","hash":"4bfadb1ce4e732289f43f81cfce41fb35a3f2f89","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_layout/nexmoe/footer.jsx","hash":"167f67e30cdb15576c9cd9dd7cc6aafb4625e069","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_layout/nexmoe/header.ejs","hash":"24ebcbd15daee1b6b1ede4ffaffa9b86f7154167","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_layout/nexmoe/mathjax.ejs","hash":"2fab168b181e2d5bc6ac079f13152ff0177128cb","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_layout/xiaoshu/body.jsx","hash":"1d8210e9968298440a1da0cc86c3e3454dba4427","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_layout/xiaoshu/content.jsx","hash":"13a868d0b70283aaaa49770ad530261eda7a750d","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_layout/xiaoshu/footer.jsx","hash":"3ede4910be7915854ee06a545aa8ee04bd216031","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_layout/xiaoshu/header.jsx","hash":"3ede4910be7915854ee06a545aa8ee04bd216031","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_post/copyright.ejs","hash":"bf2cb43d66842b4bc51eb6908c588044a68d1364","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_post/meta.ejs","hash":"be2fdf6732f49d5d3277b4e4b0a4f9fc85fa4643","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_post/tag.ejs","hash":"5934bcb1b256642708c97f61da85fbdbd959a078","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_post/word-count.ejs","hash":"5415f792394b364fcbc1502971874dac6ea54de4","modified":1724716550007},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_index/list.styl","hash":"6ce0e88126225e582c4d788c4c88a30c11fee8fb","modified":1724716550026},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_partial/archives.styl","hash":"3f401f6caf7e7ed6c0b7fe622ed02a25cc9e5237","modified":1724716550027},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_partial/article.styl","hash":"726d9837026a4979dae3d9d790feba952de98b48","modified":1724716550027},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_partial/background.styl","hash":"a4c012e17734de0bf1a62bf5b5ebc98755b23bcb","modified":1724716550027},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_partial/copy-codeblock.styl","hash":"83372948cb098a8ad1da8bde17963701b8e39409","modified":1724716550027},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_partial/pagination.styl","hash":"aa22dd62542d69f07ce5178cd3f94cf20c9f1bca","modified":1724716550027},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_partial/py.styl","hash":"53c72cb99593d83523559013713fc25b4ae5957c","modified":1724716550027},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_partial/searchbox.styl","hash":"b25cefb269bb7188ed9d6ab0b530f30e138b33d1","modified":1724716550027},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_widget/hitokoto.styl","hash":"0086bb5a3f250439be64588fca075ee3326a6ad1","modified":1724716550027},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_widget/index.styl","hash":"465acffbe8cc98c3b275cc286c0991f422930b60","modified":1724716550027},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/fancybox/fancybox.css","hash":"cbce0cfc36f47e30e9c9824875f0b854a05f1916","modified":1724716550028},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/demo.css","hash":"53456972a11d52af67187fc17999e6665f9f06fe","modified":1724716550028},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/demo_index.html","hash":"a82acbfeabc50a6668ebf6115b5c5c3d308079b6","modified":1724716550028},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.css","hash":"3566d949bdc045cd816be382d180b796e0a78748","modified":1724716550028},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.js","hash":"a536d4780220f9cd7fc5126d9ec1108b19afb6b9","modified":1724716550028},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.json","hash":"0dd0193f6f400e5da6d3aef89f76c22c79e0f396","modified":1724716550028},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.eot","hash":"1d1851c2197382a9b7cd3b3fcdef79a61ad331f6","modified":1724716550028},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.woff","hash":"e292802913e6c248a17797dc24ecfc0a3473c3cf","modified":1724716550029},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_layout/nexmoe/content.styl","hash":"718c99320e6862a020e2652d8259c980283a6ac0","modified":1724716550026},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_layout/nexmoe/header.styl","hash":"b1c905f3a6089936aa6740546c266c03a99a8169","modified":1724716550026},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_layout/xiaoshu/content.styl","hash":"0e382da59dfe8bb1451b115e1c32f40ed126174f","modified":1724716550026},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_layout/xiaoshu/footer.styl","hash":"bebef911fb8030bbfed418492e6c1c0eae2306a7","modified":1724716550026},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_layout/xiaoshu/header.styl","hash":"fb047e449d0a3f37f8beffc31af0ed9ffa2da9d3","modified":1724716550027},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.woff2","hash":"9209e4f7e45d37e58356e5ede7ea9d6d9e922d77","modified":1724716550029},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.ttf","hash":"b0f4b5501cbcaeaf15dc608359574a29bc4c4265","modified":1724716550029},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.svg","hash":"2af6d26577c3ae2ca126351f0be764cbae9da6ff","modified":1724716550028},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/fancybox/fancybox.umd.js","hash":"f2126b3e96721606a2ba20e0f148404814262171","modified":1724716550028},{"_id":"node_modules/hexo-theme-nexmoe/demo/package-lock.json","hash":"37e07fd906a664c3706e684e8efcb4d86f31e3e9","modified":1724716550005},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/mdui_043tiny/mdui.css","hash":"1500b5d27b8ce2e7c543bb6d7205de43059378db","modified":1724716550030},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/mdui_043tiny/mdui.js","hash":"5c0bced25b23773e764338ae4581f366f984cb6c","modified":1724716550031},{"_id":"public/content.json","hash":"5d2cf8fd82d3509601f3c4cec37c5d9418468955","modified":1724730138112},{"_id":"public/2024/08/27/hello-world/index.html","hash":"e7dd7bcd943ca31a994227d55b5dcc2bef0402ae","modified":1724730854932},{"_id":"public/index.html","hash":"518fd58a31beace5df993fb8a7cbcc77ce5e1bd9","modified":1724730854932},{"_id":"public/archives/index.html","hash":"e1640480a8dc44b04982b1eb026ab1ef2ddea1cd","modified":1724730854932},{"_id":"public/archives/2024/index.html","hash":"64b7931de523000cef86b60254748414c31cb2e3","modified":1724730854932},{"_id":"public/archives/2024/08/index.html","hash":"0da52b0cd68381e8b3ffc70c8564831e8ce5f637","modified":1724730854932},{"_id":"public/lib/iconfont/iconfont.eot","hash":"1d1851c2197382a9b7cd3b3fcdef79a61ad331f6","modified":1724720830612},{"_id":"public/lib/iconfont/iconfont.svg","hash":"2af6d26577c3ae2ca126351f0be764cbae9da6ff","modified":1724720830612},{"_id":"public/lib/iconfont/iconfont.ttf","hash":"b0f4b5501cbcaeaf15dc608359574a29bc4c4265","modified":1724720830612},{"_id":"public/lib/iconfont/iconfont.woff","hash":"e292802913e6c248a17797dc24ecfc0a3473c3cf","modified":1724720830612},{"_id":"public/lib/iconfont/iconfont.woff2","hash":"9209e4f7e45d37e58356e5ede7ea9d6d9e922d77","modified":1724720830612},{"_id":"public/css/prism.css","hash":"f1f64f4a26b715edbd65391def53322611df75cf","modified":1724720830612},{"_id":"public/css/prism-line-numbers.css","hash":"a1692758d22c6cdf6fd1a8dafc9b4b98e41d3138","modified":1724720830612},{"_id":"public/js/prism.js","hash":"cc4a0863a7381b09d369ab5c495563814e4424e2","modified":1724720830612},{"_id":"public/js/prism-line-numbers.min.js","hash":"47a334d25e6977341ab4334d774921a1495eff9c","modified":1724720830612},{"_id":"public/css/style.css","hash":"2986810eeaa90c45dce6d38f4b6ff845f39a2f0a","modified":1724720830612},{"_id":"public/js/copy-codeblock.js","hash":"51f1b526133258db1080826574c50a683a34c559","modified":1724720830612},{"_id":"public/js/search.js","hash":"eb69cd78f6ab8d3e83576dae29f09c9af0ffe8b9","modified":1724720830612},{"_id":"public/js/app.js","hash":"965c3befaa26a06484204b34f20b8770e186866a","modified":1724720830612},{"_id":"public/lib/lax.min.js","hash":"1de100aa90834f1f4fae9a4deb44a73048fefff0","modified":1724720830612},{"_id":"public/preset/plain.css","hash":"368322b6cc3b448ed92d2cadd0fb3abc421d8ab4","modified":1724720830612},{"_id":"public/lib/fancybox/fancybox.css","hash":"cbce0cfc36f47e30e9c9824875f0b854a05f1916","modified":1724720830612},{"_id":"public/lib/fancybox/fancybox.umd.js","hash":"f2126b3e96721606a2ba20e0f148404814262171","modified":1724720830612},{"_id":"public/lib/iconfont/demo.css","hash":"65c50db528a5abe06426b1a20735feaf1f2a0d9b","modified":1724720830612},{"_id":"public/lib/iconfont/demo_index.html","hash":"df3f126af2695d3dd839edcfda49b951b02f701e","modified":1724720830612},{"_id":"public/lib/iconfont/iconfont.css","hash":"01952f8f10c716cbb463b589a345e46f1b8cc101","modified":1724720830612},{"_id":"public/lib/iconfont/iconfont.js","hash":"a536d4780220f9cd7fc5126d9ec1108b19afb6b9","modified":1724720830612},{"_id":"public/lib/iconfont/iconfont.json","hash":"8fbdca1d1886c8c6d9bfe1fb105595c65050a175","modified":1724720830612},{"_id":"public/lib/mdui_043tiny/mdui.css","hash":"b79ef94d2b11f8ce05ba048f5d74a3bd09f12e4d","modified":1724720830612},{"_id":"public/lib/mdui_043tiny/mdui.js","hash":"0bd653abb12272e4ed2122dbdc8ca1c2b140a363","modified":1724720830612},{"_id":"public/sitemap.xml","hash":"78d92d3165a986f468c11f2d85990d79f7723340","modified":1724730138112},{"_id":"public/sitemap.txt","hash":"e1d5dcf4235a68a519a0e99402598fc8481e7a6c","modified":1724730138112},{"_id":"public/2024/08/26/hello-world/index.html","hash":"0625e6a9d37d86c99e6c61a57302974d7bd4eff9","modified":1724730003945},{"_id":"source/a.txt","hash":"72677028b4d0d41af475041fdbe030f7c7146d2c","modified":1724721262957},{"_id":"source/custom.css","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1724721181217},{"_id":"public/custom.css","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1724721264943},{"_id":"public/a.txt","hash":"72677028b4d0d41af475041fdbe030f7c7146d2c","modified":1724721264943},{"_id":"source/gd.md","hash":"56c0a7fd2e237a999bf1d33a254a9af4ab09bff0","modified":1724729490636},{"_id":"public/gd.html","hash":"3540fada5d3896a377d51291dff07c7238b5eee8","modified":1724729682486},{"_id":"source/archive.md","hash":"56c0a7fd2e237a999bf1d33a254a9af4ab09bff0","modified":1724729755032},{"_id":"public/archive.html","hash":"e6de75278e899f37260fd6d713f2e1cf5dc0593c","modified":1724730854932},{"_id":"public/categories/test/index.html","hash":"2713d433c9a5f3158059c576960ee37e5ca69784","modified":1724730854932},{"_id":"source/_posts/about_me.md","hash":"1128c7a67a2c9d684583be511161d91bbb4e06df","modified":1724759173920},{"_id":"source/_posts/2023_10_problems.md","hash":"fcfdae0d75640ae707a58ff44904f9ea8bddbf0b","modified":1724759934088},{"_id":"source/_posts/lg_P6883.md","hash":"000e1c787de27d57007f75702666b018329016f0","modified":1724759894844}],"Category":[{"name":"test","_id":"cm0bvsfxz0000ky5x59qva0t6"},{"name":"生活","_id":"cm0cd3pwm0001pq5x01je5pc5"},{"name":"OI","_id":"cm0cd7ydt0004pq5xgmcmd9s9"},{"name":"杂题","_id":"cm0cd86tm0006pq5x7iejcbsv"},{"name":"题解","_id":"cm0cdblzm00016k5x71g33t7j"}],"Data":[],"Page":[{"_content":"\n","source":"custom.css","raw":"\n","date":"2024-08-27T01:13:01.217Z","updated":"2024-08-27T01:13:01.217Z","path":"custom.css","layout":"false","_id":"cm0bqgfhf0000uw5xd3sxc2vd","title":"","comments":1,"content":"\n"},{"title":"文章归档","layout":"archives","_content":"\n","source":"archive.md","raw":"---\ntitle: 文章归档\nlayout: archives\n---\n\n","date":"2024-08-27T03:36:13.832Z","updated":"2024-08-27T03:36:13.832Z","path":"archive.html","_id":"cm0bvkb8m00000t5xamlvfak5","comments":1,"content":"","excerpt":"","more":""}],"Post":[{"title":"About Me","_content":"\n\n## 基本信息\n\n四川初三 Oier。~~弱死了~~。\n\n性别：男。\n\n生日：2009-12-24。\n\n体重：？（在减了，在减了~~O.o~~）\n\n身高：180？\n\n[洛谷](https://www.luogu.com.cn/user/712506)。\n\n[cnblogs](https://www.cnblogs.com/luckycloud)\n\n不挂 CF，AT。没脸挂。QwQ。\n\n## 成分\n\nCSP-J/S 2023？\n\n依托答辩。\n\nwhk ？\n\n依旧被吊打。qwq。真 FW 啊。\n\n爱看《推子》《鬼灭》《小埋》《小排球》...\n\n爱玩 Mc，王者。\n\n想玩 Ori，正在筹钱。QwQ。\n\n运动：**排球**，乒乓球，羽毛球，篮球。不怎么会打篮球与踢足球。","source":"_posts/about_me.md","raw":"---\ntitle: About Me\ncategories: 生活\n---\n\n\n## 基本信息\n\n四川初三 Oier。~~弱死了~~。\n\n性别：男。\n\n生日：2009-12-24。\n\n体重：？（在减了，在减了~~O.o~~）\n\n身高：180？\n\n[洛谷](https://www.luogu.com.cn/user/712506)。\n\n[cnblogs](https://www.cnblogs.com/luckycloud)\n\n不挂 CF，AT。没脸挂。QwQ。\n\n## 成分\n\nCSP-J/S 2023？\n\n依托答辩。\n\nwhk ？\n\n依旧被吊打。qwq。真 FW 啊。\n\n爱看《推子》《鬼灭》《小埋》《小排球》...\n\n爱玩 Mc，王者。\n\n想玩 Ori，正在筹钱。QwQ。\n\n运动：**排球**，乒乓球，羽毛球，篮球。不怎么会打篮球与踢足球。","slug":"about_me","published":1,"date":"2024-08-27T11:43:36.748Z","updated":"2024-08-27T11:46:13.920Z","comments":1,"layout":"post","photos":[],"_id":"cm0cd3pwh0000pq5x8gid6hz4","content":"<h2 id=\"基本信息\"><a href=\"#基本信息\" class=\"headerlink\" title=\"基本信息\"></a>基本信息</h2><p>四川初三 Oier。<del>弱死了</del>。</p>\n<p>性别：男。</p>\n<p>生日：2009-12-24。</p>\n<p>体重：？（在减了，在减了<del>O.o</del>）</p>\n<p>身高：180？</p>\n<p><a href=\"https://www.luogu.com.cn/user/712506\">洛谷</a>。</p>\n<p><a href=\"https://www.cnblogs.com/luckycloud\">cnblogs</a></p>\n<p>不挂 CF，AT。没脸挂。QwQ。</p>\n<h2 id=\"成分\"><a href=\"#成分\" class=\"headerlink\" title=\"成分\"></a>成分</h2><p>CSP-J/S 2023？</p>\n<p>依托答辩。</p>\n<p>whk ？</p>\n<p>依旧被吊打。qwq。真 FW 啊。</p>\n<p>爱看《推子》《鬼灭》《小埋》《小排球》…</p>\n<p>爱玩 Mc，王者。</p>\n<p>想玩 Ori，正在筹钱。QwQ。</p>\n<p>运动：<strong>排球</strong>，乒乓球，羽毛球，篮球。不怎么会打篮球与踢足球。</p>\n","excerpt":"","more":"<h2 id=\"基本信息\"><a href=\"#基本信息\" class=\"headerlink\" title=\"基本信息\"></a>基本信息</h2><p>四川初三 Oier。<del>弱死了</del>。</p>\n<p>性别：男。</p>\n<p>生日：2009-12-24。</p>\n<p>体重：？（在减了，在减了<del>O.o</del>）</p>\n<p>身高：180？</p>\n<p><a href=\"https://www.luogu.com.cn/user/712506\">洛谷</a>。</p>\n<p><a href=\"https://www.cnblogs.com/luckycloud\">cnblogs</a></p>\n<p>不挂 CF，AT。没脸挂。QwQ。</p>\n<h2 id=\"成分\"><a href=\"#成分\" class=\"headerlink\" title=\"成分\"></a>成分</h2><p>CSP-J/S 2023？</p>\n<p>依托答辩。</p>\n<p>whk ？</p>\n<p>依旧被吊打。qwq。真 FW 啊。</p>\n<p>爱看《推子》《鬼灭》《小埋》《小排球》…</p>\n<p>爱玩 Mc，王者。</p>\n<p>想玩 Ori，正在筹钱。QwQ。</p>\n<p>运动：<strong>排球</strong>，乒乓球，羽毛球，篮球。不怎么会打篮球与踢足球。</p>\n"},{"title":"2023 10月杂题记","date":"2023-10-01T16:00:00.000Z","cover":"https://lucky-cloud09.github.io/img/b2.jpg","_content":"\n\n# [CF1875D](https://www.luogu.com.cn/problem/CF1875D)\n\n我们经过思考，容易得出以下结论：\n\n1. 如果当前 $mex = x$，则下一个删的数一定小于 $x$。\n1. 如果 $mex = 0$，那么我们就可以不往下算了，因为它们对答案的贡献为 $0$。\n\n我们设 $f[i]$ 表示当 $mex = i$ 时，$m$ 的值。\n\n则有：\n\n$$f[i] = \\min(f[j] + (c[i] - 1) \\times j + i, f[i])$$\n\n其中 $j > i$，$c[i]$ 表示 $i$ 在 $a$ 中的个数。\n\n因为，我们要使 $mex = i$，就必须将 $i$ 这个数删去，并且 $0 \\sim i-1$ 都还存在于 $a$ 中。我们会删 $c[i]$ 次，但 $c[i] - 1$ 次，$m$ 会加上上一个 $mex$ 的值。 第 $c[i]$ 次则会加上 $i$，也就是新的 $mex$。\n\n设没删任何数的 $mex = first$。\n\n根据定义，初始化 $f[first] = 0$。\n\n根据上述结论，与定义，答案即为 $f[0]$。\n\n# [CF755F](https://www.luogu.com.cn/problem/CF755F)\n\n不想腾 markdown 了，[点这里吧](https://www.luogu.com.cn/blog/712506/solution-cf755f)。\n\n# [P2816](https://www.luogu.com.cn/problem/P2816)\n\n我认为不值得绿，如果没有加强数据，黄就差不多得了。\n\n很简单的贪心。与导弹拦截差不多相同。就是枚举当前有多少堆，再判断一下取最小值。当然判断即为贪心。每一堆新加一个一定要尽可能大。\n\n时间复杂度为 $O(n^2)$，考虑优化，想一下，明显的有单调性，可以选择二分答案，时间复杂度 $O(n \\log n)$，瓶颈在于排序与二分。\n\n代码：\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n, a[5100], ans = 1e9, cnt, v[5100];\n\nbool check(int x) {\n\tfor (int i = 0; i <= x; i++) v[i] = 1e9;\n\tfor (int i = 1; i <= n; i++) v[i % x] = min(v[i % x] - 1, a[i]);\n\tfor (int i = 0; i <= x; i++)\n\t\tif (v[i] < 0) return 0;\n\treturn 1;\n}\n\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t}\n\tsort(a + 1, a + 1 + n, [](int x, int y){return x > y;});\n\tint l = 1, r = n;\n\twhile (l <= r) {\n\t\tint mid = (l + r) >> 1;\n\t\tif (check(mid)) {\n\t\t\tans = min(ans, mid);\n\t\t\tr = mid - 1;\n\t\t}\n\t\telse l = mid + 1;\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```","source":"_posts/2023_10_problems.md","raw":"---\ntitle: 2023 10月杂题记\ncategories: 杂题\ndate: 2023/10/02\ncover: https://lucky-cloud09.github.io/img/b2.jpg\n---\n\n\n# [CF1875D](https://www.luogu.com.cn/problem/CF1875D)\n\n我们经过思考，容易得出以下结论：\n\n1. 如果当前 $mex = x$，则下一个删的数一定小于 $x$。\n1. 如果 $mex = 0$，那么我们就可以不往下算了，因为它们对答案的贡献为 $0$。\n\n我们设 $f[i]$ 表示当 $mex = i$ 时，$m$ 的值。\n\n则有：\n\n$$f[i] = \\min(f[j] + (c[i] - 1) \\times j + i, f[i])$$\n\n其中 $j > i$，$c[i]$ 表示 $i$ 在 $a$ 中的个数。\n\n因为，我们要使 $mex = i$，就必须将 $i$ 这个数删去，并且 $0 \\sim i-1$ 都还存在于 $a$ 中。我们会删 $c[i]$ 次，但 $c[i] - 1$ 次，$m$ 会加上上一个 $mex$ 的值。 第 $c[i]$ 次则会加上 $i$，也就是新的 $mex$。\n\n设没删任何数的 $mex = first$。\n\n根据定义，初始化 $f[first] = 0$。\n\n根据上述结论，与定义，答案即为 $f[0]$。\n\n# [CF755F](https://www.luogu.com.cn/problem/CF755F)\n\n不想腾 markdown 了，[点这里吧](https://www.luogu.com.cn/blog/712506/solution-cf755f)。\n\n# [P2816](https://www.luogu.com.cn/problem/P2816)\n\n我认为不值得绿，如果没有加强数据，黄就差不多得了。\n\n很简单的贪心。与导弹拦截差不多相同。就是枚举当前有多少堆，再判断一下取最小值。当然判断即为贪心。每一堆新加一个一定要尽可能大。\n\n时间复杂度为 $O(n^2)$，考虑优化，想一下，明显的有单调性，可以选择二分答案，时间复杂度 $O(n \\log n)$，瓶颈在于排序与二分。\n\n代码：\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n, a[5100], ans = 1e9, cnt, v[5100];\n\nbool check(int x) {\n\tfor (int i = 0; i <= x; i++) v[i] = 1e9;\n\tfor (int i = 1; i <= n; i++) v[i % x] = min(v[i % x] - 1, a[i]);\n\tfor (int i = 0; i <= x; i++)\n\t\tif (v[i] < 0) return 0;\n\treturn 1;\n}\n\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t}\n\tsort(a + 1, a + 1 + n, [](int x, int y){return x > y;});\n\tint l = 1, r = n;\n\twhile (l <= r) {\n\t\tint mid = (l + r) >> 1;\n\t\tif (check(mid)) {\n\t\t\tans = min(ans, mid);\n\t\t\tr = mid - 1;\n\t\t}\n\t\telse l = mid + 1;\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```","slug":"2023_10_problems","published":1,"updated":"2024-08-27T11:58:54.088Z","_id":"cm0cd71kt0003pq5x4fu68xul","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"CF1875D\"><a href=\"#CF1875D\" class=\"headerlink\" title=\"CF1875D\"></a><a href=\"https://www.luogu.com.cn/problem/CF1875D\">CF1875D</a></h1><p>我们经过思考，容易得出以下结论：</p>\n<ol>\n<li>如果当前 $mex = x$，则下一个删的数一定小于 $x$。</li>\n<li>如果 $mex = 0$，那么我们就可以不往下算了，因为它们对答案的贡献为 $0$。</li>\n</ol>\n<p>我们设 $f[i]$ 表示当 $mex = i$ 时，$m$ 的值。</p>\n<p>则有：</p>\n<script type=\"math/tex; mode=display\">f[i] = \\min(f[j] + (c[i] - 1) \\times j + i, f[i])</script><p>其中 $j &gt; i$，$c[i]$ 表示 $i$ 在 $a$ 中的个数。</p>\n<p>因为，我们要使 $mex = i$，就必须将 $i$ 这个数删去，并且 $0 \\sim i-1$ 都还存在于 $a$ 中。我们会删 $c[i]$ 次，但 $c[i] - 1$ 次，$m$ 会加上上一个 $mex$ 的值。 第 $c[i]$ 次则会加上 $i$，也就是新的 $mex$。</p>\n<p>设没删任何数的 $mex = first$。</p>\n<p>根据定义，初始化 $f[first] = 0$。</p>\n<p>根据上述结论，与定义，答案即为 $f[0]$。</p>\n<h1 id=\"CF755F\"><a href=\"#CF755F\" class=\"headerlink\" title=\"CF755F\"></a><a href=\"https://www.luogu.com.cn/problem/CF755F\">CF755F</a></h1><p>不想腾 markdown 了，<a href=\"https://www.luogu.com.cn/blog/712506/solution-cf755f\">点这里吧</a>。</p>\n<h1 id=\"P2816\"><a href=\"#P2816\" class=\"headerlink\" title=\"P2816\"></a><a href=\"https://www.luogu.com.cn/problem/P2816\">P2816</a></h1><p>我认为不值得绿，如果没有加强数据，黄就差不多得了。</p>\n<p>很简单的贪心。与导弹拦截差不多相同。就是枚举当前有多少堆，再判断一下取最小值。当然判断即为贪心。每一堆新加一个一定要尽可能大。</p>\n<p>时间复杂度为 $O(n^2)$，考虑优化，想一下，明显的有单调性，可以选择二分答案，时间复杂度 $O(n \\log n)$，瓶颈在于排序与二分。</p>\n<p>代码：<br><figure class=\"shiki cpp\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></div><div class=\"code\"><pre class=\"shiki solarized-light\"><code><span class=\"line\"><span style=\"color: #859900\">#include</span><span style=\"color: #B58900\"> </span><span style=\"color: #2AA198\">&lt;bits/stdc++.h&gt;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">using</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">namespace</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">std</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> n, </span><span style=\"color: #268BD2\">a</span><span style=\"color: #657B83\">[</span><span style=\"color: #D33682\">5100</span><span style=\"color: #657B83\">], ans </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #859900\">e</span><span style=\"color: #D33682\">9</span><span style=\"color: #657B83\">, cnt, </span><span style=\"color: #268BD2\">v</span><span style=\"color: #657B83\">[</span><span style=\"color: #D33682\">5100</span><span style=\"color: #657B83\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">bool</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">check</span><span style=\"color: #657B83\">(</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> x) {</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> i </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">; i </span><span style=\"color: #859900\">&lt;=</span><span style=\"color: #657B83\"> x; i</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">) </span><span style=\"color: #268BD2\">v</span><span style=\"color: #657B83\">[i] </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #859900\">e</span><span style=\"color: #D33682\">9</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> i </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">; i </span><span style=\"color: #859900\">&lt;=</span><span style=\"color: #657B83\"> n; i</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">) </span><span style=\"color: #268BD2\">v</span><span style=\"color: #657B83\">[i </span><span style=\"color: #859900\">%</span><span style=\"color: #657B83\"> x] </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">min</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">v</span><span style=\"color: #657B83\">[i </span><span style=\"color: #859900\">%</span><span style=\"color: #657B83\"> x] </span><span style=\"color: #859900\">-</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">, </span><span style=\"color: #268BD2\">a</span><span style=\"color: #657B83\">[i]);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> i </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">; i </span><span style=\"color: #859900\">&lt;=</span><span style=\"color: #657B83\"> x; i</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">)</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t</span><span style=\"color: #859900\">if</span><span style=\"color: #657B83\"> (</span><span style=\"color: #268BD2\">v</span><span style=\"color: #657B83\">[i] </span><span style=\"color: #859900\">&lt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">) </span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">main</span><span style=\"color: #657B83\">() {</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\tcin </span><span style=\"color: #859900\">&gt;&gt;</span><span style=\"color: #657B83\"> n;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> i </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">; i </span><span style=\"color: #859900\">&lt;=</span><span style=\"color: #657B83\"> n; i</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">) {</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\tcin </span><span style=\"color: #859900\">&gt;&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">a</span><span style=\"color: #657B83\">[i];</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #268BD2\">sort</span><span style=\"color: #657B83\">(a </span><span style=\"color: #859900\">+</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">, a </span><span style=\"color: #859900\">+</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">+</span><span style=\"color: #657B83\"> n, [](</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> x, </span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> y){</span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> x </span><span style=\"color: #859900\">&gt;</span><span style=\"color: #657B83\"> y;});</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> l </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">, r </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> n;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">while</span><span style=\"color: #657B83\"> (l </span><span style=\"color: #859900\">&lt;=</span><span style=\"color: #657B83\"> r) {</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> mid </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> (l </span><span style=\"color: #859900\">+</span><span style=\"color: #657B83\"> r) </span><span style=\"color: #859900\">&gt;&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t</span><span style=\"color: #859900\">if</span><span style=\"color: #657B83\"> (</span><span style=\"color: #268BD2\">check</span><span style=\"color: #657B83\">(mid)) {</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t\tans </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">min</span><span style=\"color: #657B83\">(ans, mid);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t\tr </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> mid </span><span style=\"color: #859900\">-</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t}</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t</span><span style=\"color: #859900\">else</span><span style=\"color: #657B83\"> l </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> mid </span><span style=\"color: #859900\">+</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\tcout </span><span style=\"color: #859900\">&lt;&lt;</span><span style=\"color: #657B83\"> ans;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">}</span></span></code></pre></div></div></figure></p>\n","excerpt":"","more":"<h1 id=\"CF1875D\"><a href=\"#CF1875D\" class=\"headerlink\" title=\"CF1875D\"></a><a href=\"https://www.luogu.com.cn/problem/CF1875D\">CF1875D</a></h1><p>我们经过思考，容易得出以下结论：</p>\n<ol>\n<li>如果当前 $mex = x$，则下一个删的数一定小于 $x$。</li>\n<li>如果 $mex = 0$，那么我们就可以不往下算了，因为它们对答案的贡献为 $0$。</li>\n</ol>\n<p>我们设 $f[i]$ 表示当 $mex = i$ 时，$m$ 的值。</p>\n<p>则有：</p>\n<script type=\"math/tex; mode=display\">f[i] = \\min(f[j] + (c[i] - 1) \\times j + i, f[i])</script><p>其中 $j &gt; i$，$c[i]$ 表示 $i$ 在 $a$ 中的个数。</p>\n<p>因为，我们要使 $mex = i$，就必须将 $i$ 这个数删去，并且 $0 \\sim i-1$ 都还存在于 $a$ 中。我们会删 $c[i]$ 次，但 $c[i] - 1$ 次，$m$ 会加上上一个 $mex$ 的值。 第 $c[i]$ 次则会加上 $i$，也就是新的 $mex$。</p>\n<p>设没删任何数的 $mex = first$。</p>\n<p>根据定义，初始化 $f[first] = 0$。</p>\n<p>根据上述结论，与定义，答案即为 $f[0]$。</p>\n<h1 id=\"CF755F\"><a href=\"#CF755F\" class=\"headerlink\" title=\"CF755F\"></a><a href=\"https://www.luogu.com.cn/problem/CF755F\">CF755F</a></h1><p>不想腾 markdown 了，<a href=\"https://www.luogu.com.cn/blog/712506/solution-cf755f\">点这里吧</a>。</p>\n<h1 id=\"P2816\"><a href=\"#P2816\" class=\"headerlink\" title=\"P2816\"></a><a href=\"https://www.luogu.com.cn/problem/P2816\">P2816</a></h1><p>我认为不值得绿，如果没有加强数据，黄就差不多得了。</p>\n<p>很简单的贪心。与导弹拦截差不多相同。就是枚举当前有多少堆，再判断一下取最小值。当然判断即为贪心。每一堆新加一个一定要尽可能大。</p>\n<p>时间复杂度为 $O(n^2)$，考虑优化，想一下，明显的有单调性，可以选择二分答案，时间复杂度 $O(n \\log n)$，瓶颈在于排序与二分。</p>\n<p>代码：<br><figure class=\"shiki cpp\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></div><div class=\"code\"><pre class=\"shiki solarized-light\"><code><span class=\"line\"><span style=\"color: #859900\">#include</span><span style=\"color: #B58900\"> </span><span style=\"color: #2AA198\">&lt;bits/stdc++.h&gt;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">using</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">namespace</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">std</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> n, </span><span style=\"color: #268BD2\">a</span><span style=\"color: #657B83\">[</span><span style=\"color: #D33682\">5100</span><span style=\"color: #657B83\">], ans </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #859900\">e</span><span style=\"color: #D33682\">9</span><span style=\"color: #657B83\">, cnt, </span><span style=\"color: #268BD2\">v</span><span style=\"color: #657B83\">[</span><span style=\"color: #D33682\">5100</span><span style=\"color: #657B83\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">bool</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">check</span><span style=\"color: #657B83\">(</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> x) {</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> i </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">; i </span><span style=\"color: #859900\">&lt;=</span><span style=\"color: #657B83\"> x; i</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">) </span><span style=\"color: #268BD2\">v</span><span style=\"color: #657B83\">[i] </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #859900\">e</span><span style=\"color: #D33682\">9</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> i </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">; i </span><span style=\"color: #859900\">&lt;=</span><span style=\"color: #657B83\"> n; i</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">) </span><span style=\"color: #268BD2\">v</span><span style=\"color: #657B83\">[i </span><span style=\"color: #859900\">%</span><span style=\"color: #657B83\"> x] </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">min</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">v</span><span style=\"color: #657B83\">[i </span><span style=\"color: #859900\">%</span><span style=\"color: #657B83\"> x] </span><span style=\"color: #859900\">-</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">, </span><span style=\"color: #268BD2\">a</span><span style=\"color: #657B83\">[i]);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> i </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">; i </span><span style=\"color: #859900\">&lt;=</span><span style=\"color: #657B83\"> x; i</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">)</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t</span><span style=\"color: #859900\">if</span><span style=\"color: #657B83\"> (</span><span style=\"color: #268BD2\">v</span><span style=\"color: #657B83\">[i] </span><span style=\"color: #859900\">&lt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">) </span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">main</span><span style=\"color: #657B83\">() {</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\tcin </span><span style=\"color: #859900\">&gt;&gt;</span><span style=\"color: #657B83\"> n;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> i </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">; i </span><span style=\"color: #859900\">&lt;=</span><span style=\"color: #657B83\"> n; i</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">) {</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\tcin </span><span style=\"color: #859900\">&gt;&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">a</span><span style=\"color: #657B83\">[i];</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #268BD2\">sort</span><span style=\"color: #657B83\">(a </span><span style=\"color: #859900\">+</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">, a </span><span style=\"color: #859900\">+</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">+</span><span style=\"color: #657B83\"> n, [](</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> x, </span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> y){</span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> x </span><span style=\"color: #859900\">&gt;</span><span style=\"color: #657B83\"> y;});</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> l </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">, r </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> n;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">while</span><span style=\"color: #657B83\"> (l </span><span style=\"color: #859900\">&lt;=</span><span style=\"color: #657B83\"> r) {</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> mid </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> (l </span><span style=\"color: #859900\">+</span><span style=\"color: #657B83\"> r) </span><span style=\"color: #859900\">&gt;&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t</span><span style=\"color: #859900\">if</span><span style=\"color: #657B83\"> (</span><span style=\"color: #268BD2\">check</span><span style=\"color: #657B83\">(mid)) {</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t\tans </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">min</span><span style=\"color: #657B83\">(ans, mid);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t\tr </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> mid </span><span style=\"color: #859900\">-</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t}</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t</span><span style=\"color: #859900\">else</span><span style=\"color: #657B83\"> l </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> mid </span><span style=\"color: #859900\">+</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\tcout </span><span style=\"color: #859900\">&lt;&lt;</span><span style=\"color: #657B83\"> ans;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">}</span></span></code></pre></div></div></figure></p>\n"},{"title":"P6883 [COCI2016-2017#3] Kroničan","date":"2023-11-11T16:00:00.000Z","cover":"https://lucky-cloud09.github.io/img/b1.jpg","_content":"\n\n一眼丁真：一道**简单的入门的小清新状压好题**。\n\n## 分析\n\n根据题意，每一个杯子只有有水或没水这两种状态。很容易想到用二进制去表示。有水为 $0$，没水为 $1$。\n\n举个例子，有两个杯子所有杯子都没有水，那么状态为 $11$。\n\n设 $dp[i]$ 表示从初始状态到状态 $i$ 所需的最小代价。\n\n另外我们可以想到一个性质，例如说 $x$ 倒入 $y$ 中，$z$ 再倒往 $y$ 中，$y$ 倒入 $k$ 中与 $x$ 倒入 $y$ 中，$y$ 再倒往 $k$ 中，$z$ 倒往 $y$ 中，$y$ 有再一次倒入 $k$ 中是等价的。也就是倒入一个空杯子中与倒往这个杯子没空的时候可能是一样的。所以对于每一个状态 $i$，若当前有一个水杯没有水并且在上一步有水，则肯定是倒给了当前所有有水的杯子中的其中一个，而不是倒入没水的杯中。就不用算重复的情况了。\n\n那么我们很容易想出转移方程：\n\n$$dp[i] = \\min(dp[i \\oplus (1 << j)] + c[j][k], dp[i])$$\n\n其中 $j$ 表示当前没有水的水杯，$k$ 表示当前有水的水杯，当然 $0 \\le j, k < n$。下标从 $0$ 开始。而 $i \\oplus (1 << j)$ 表示能转移到 $i$ 这个状态的状态。\n\n初始化。\n\n根据题意和定义 $dp[0] = 0$，其余则为正无穷。\n\n答案就是在合法的状态中取最小值。\n\n$0$ 的个数小于等于 $k$ 的状态即为合法。\n\n当然，有一个小地方要注意，从 $x$ 杯倒入 $y$ 杯的价值可能不等于从 $y$ 杯 倒入 $x$ 杯的价值。\n\n时间复杂度 $O(2^n n^2)$。对于这题够用了。\n\n## Code\n\n下面的 `__builtin_popcount(i)` 是求出 $i$ 在二进制下有多少个 $1$。\n\n顺便告诉你，吸个氧就逼近最优解了。\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n, k, dp[(1 << 20) + 5], c[25][25];\n\nint main() {\n\tcin >> n >> k;\n\tmemset(dp, 0x3f, sizeof dp);\n\tfor (int i = 0; i < n; i++)//下标从 0 开始。\n\t\tfor (int j = 0; j < n; j++)\n\t\t\tcin >> c[i][j];\n\tdp[0] = 0;\n\tfor (int i = 1; i < (1 << n); i++) {\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tif (i & (1 << j))//如果 j 这一杯没水。\n\t\t\t\tfor (int k = 0; k < n; k++)\n\t\t\t\t\tif (!(i & (1 << k)))//找到当前有水的杯子，可能在上一步 j 的水倒入了 $k$。\n\t\t\t\t\t\tdp[i] = min(dp[i], dp[(i - (1 << j))] + c[j][k]);//一定是 c[j][k]\n\t\t}\n\t}\n\tint ans = 1e9;\n\tfor (int i = 0; i < (1 << n); i++)\n\t\tif (__builtin_popcount(i) >= n - k)//也可以写成 n - __builtin_popcount(i) <= k，就是需要 0 的个数小于等于 k，或 1 的个数大于等于 k。\n\t\t\tans = min(ans, dp[i]);\n\tcout << ans;\n\treturn 0;\n}\n```\n\n## 后记\n\nCSP2023 后的第一篇题解~~还是随机跳题来的~~捏。\n\n若蒟蒻有空，会解答评论区的问题的。QwQ。\n\n蒟蒻可能有笔误，欢迎大佬们来纠正。","source":"_posts/lg_P6883.md","raw":"---\ntitle: P6883 [COCI2016-2017#3] Kroničan\ncategories: 题解\ndate: 2023/11/12\ncover: https://lucky-cloud09.github.io/img/b1.jpg\n---\n\n\n一眼丁真：一道**简单的入门的小清新状压好题**。\n\n## 分析\n\n根据题意，每一个杯子只有有水或没水这两种状态。很容易想到用二进制去表示。有水为 $0$，没水为 $1$。\n\n举个例子，有两个杯子所有杯子都没有水，那么状态为 $11$。\n\n设 $dp[i]$ 表示从初始状态到状态 $i$ 所需的最小代价。\n\n另外我们可以想到一个性质，例如说 $x$ 倒入 $y$ 中，$z$ 再倒往 $y$ 中，$y$ 倒入 $k$ 中与 $x$ 倒入 $y$ 中，$y$ 再倒往 $k$ 中，$z$ 倒往 $y$ 中，$y$ 有再一次倒入 $k$ 中是等价的。也就是倒入一个空杯子中与倒往这个杯子没空的时候可能是一样的。所以对于每一个状态 $i$，若当前有一个水杯没有水并且在上一步有水，则肯定是倒给了当前所有有水的杯子中的其中一个，而不是倒入没水的杯中。就不用算重复的情况了。\n\n那么我们很容易想出转移方程：\n\n$$dp[i] = \\min(dp[i \\oplus (1 << j)] + c[j][k], dp[i])$$\n\n其中 $j$ 表示当前没有水的水杯，$k$ 表示当前有水的水杯，当然 $0 \\le j, k < n$。下标从 $0$ 开始。而 $i \\oplus (1 << j)$ 表示能转移到 $i$ 这个状态的状态。\n\n初始化。\n\n根据题意和定义 $dp[0] = 0$，其余则为正无穷。\n\n答案就是在合法的状态中取最小值。\n\n$0$ 的个数小于等于 $k$ 的状态即为合法。\n\n当然，有一个小地方要注意，从 $x$ 杯倒入 $y$ 杯的价值可能不等于从 $y$ 杯 倒入 $x$ 杯的价值。\n\n时间复杂度 $O(2^n n^2)$。对于这题够用了。\n\n## Code\n\n下面的 `__builtin_popcount(i)` 是求出 $i$ 在二进制下有多少个 $1$。\n\n顺便告诉你，吸个氧就逼近最优解了。\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n, k, dp[(1 << 20) + 5], c[25][25];\n\nint main() {\n\tcin >> n >> k;\n\tmemset(dp, 0x3f, sizeof dp);\n\tfor (int i = 0; i < n; i++)//下标从 0 开始。\n\t\tfor (int j = 0; j < n; j++)\n\t\t\tcin >> c[i][j];\n\tdp[0] = 0;\n\tfor (int i = 1; i < (1 << n); i++) {\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tif (i & (1 << j))//如果 j 这一杯没水。\n\t\t\t\tfor (int k = 0; k < n; k++)\n\t\t\t\t\tif (!(i & (1 << k)))//找到当前有水的杯子，可能在上一步 j 的水倒入了 $k$。\n\t\t\t\t\t\tdp[i] = min(dp[i], dp[(i - (1 << j))] + c[j][k]);//一定是 c[j][k]\n\t\t}\n\t}\n\tint ans = 1e9;\n\tfor (int i = 0; i < (1 << n); i++)\n\t\tif (__builtin_popcount(i) >= n - k)//也可以写成 n - __builtin_popcount(i) <= k，就是需要 0 的个数小于等于 k，或 1 的个数大于等于 k。\n\t\t\tans = min(ans, dp[i]);\n\tcout << ans;\n\treturn 0;\n}\n```\n\n## 后记\n\nCSP2023 后的第一篇题解~~还是随机跳题来的~~捏。\n\n若蒟蒻有空，会解答评论区的问题的。QwQ。\n\n蒟蒻可能有笔误，欢迎大佬们来纠正。","slug":"lg_P6883","published":1,"updated":"2024-08-27T11:58:14.844Z","_id":"cm0cdar0800006k5xhcde89oe","comments":1,"layout":"post","photos":[],"content":"<p>一眼丁真：一道<strong>简单的入门的小清新状压好题</strong>。</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>根据题意，每一个杯子只有有水或没水这两种状态。很容易想到用二进制去表示。有水为 $0$，没水为 $1$。</p>\n<p>举个例子，有两个杯子所有杯子都没有水，那么状态为 $11$。</p>\n<p>设 $dp[i]$ 表示从初始状态到状态 $i$ 所需的最小代价。</p>\n<p>另外我们可以想到一个性质，例如说 $x$ 倒入 $y$ 中，$z$ 再倒往 $y$ 中，$y$ 倒入 $k$ 中与 $x$ 倒入 $y$ 中，$y$ 再倒往 $k$ 中，$z$ 倒往 $y$ 中，$y$ 有再一次倒入 $k$ 中是等价的。也就是倒入一个空杯子中与倒往这个杯子没空的时候可能是一样的。所以对于每一个状态 $i$，若当前有一个水杯没有水并且在上一步有水，则肯定是倒给了当前所有有水的杯子中的其中一个，而不是倒入没水的杯中。就不用算重复的情况了。</p>\n<p>那么我们很容易想出转移方程：</p>\n<script type=\"math/tex; mode=display\">dp[i] = \\min(dp[i \\oplus (1 << j)] + c[j][k], dp[i])</script><p>其中 $j$ 表示当前没有水的水杯，$k$ 表示当前有水的水杯，当然 $0 \\le j, k &lt; n$。下标从 $0$ 开始。而 $i \\oplus (1 &lt;&lt; j)$ 表示能转移到 $i$ 这个状态的状态。</p>\n<p>初始化。</p>\n<p>根据题意和定义 $dp[0] = 0$，其余则为正无穷。</p>\n<p>答案就是在合法的状态中取最小值。</p>\n<p>$0$ 的个数小于等于 $k$ 的状态即为合法。</p>\n<p>当然，有一个小地方要注意，从 $x$ 杯倒入 $y$ 杯的价值可能不等于从 $y$ 杯 倒入 $x$ 杯的价值。</p>\n<p>时间复杂度 $O(2^n n^2)$。对于这题够用了。</p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p>下面的 <code>__builtin_popcount(i)</code> 是求出 $i$ 在二进制下有多少个 $1$。</p>\n<p>顺便告诉你，吸个氧就逼近最优解了。</p>\n<figure class=\"shiki cpp\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></div><div class=\"code\"><pre class=\"shiki solarized-light\"><code><span class=\"line\"><span style=\"color: #859900\">#include</span><span style=\"color: #B58900\"> </span><span style=\"color: #2AA198\">&lt;bits/stdc++.h&gt;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">using</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">namespace</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">std</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> n, k, </span><span style=\"color: #268BD2\">dp</span><span style=\"color: #657B83\">[(</span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">&lt;&lt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">20</span><span style=\"color: #657B83\">) </span><span style=\"color: #859900\">+</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">5</span><span style=\"color: #657B83\">], </span><span style=\"color: #268BD2\">c</span><span style=\"color: #657B83\">[</span><span style=\"color: #D33682\">25</span><span style=\"color: #657B83\">][</span><span style=\"color: #D33682\">25</span><span style=\"color: #657B83\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">main</span><span style=\"color: #657B83\">() {</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\tcin </span><span style=\"color: #859900\">&gt;&gt;</span><span style=\"color: #657B83\"> n </span><span style=\"color: #859900\">&gt;&gt;</span><span style=\"color: #657B83\"> k;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #268BD2\">memset</span><span style=\"color: #657B83\">(dp, </span><span style=\"color: #859900\">0x</span><span style=\"color: #D33682\">3f</span><span style=\"color: #657B83\">, sizeof dp);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> i </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">; i </span><span style=\"color: #859900\">&lt;</span><span style=\"color: #657B83\"> n; i</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">)</span><span style=\"color: #93A1A1; font-style: italic\">//下标从 0 开始。</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> j </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">; j </span><span style=\"color: #859900\">&lt;</span><span style=\"color: #657B83\"> n; j</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">)</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t\tcin </span><span style=\"color: #859900\">&gt;&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">c</span><span style=\"color: #657B83\">[i][j];</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #268BD2\">dp</span><span style=\"color: #657B83\">[</span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">] </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> i </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">; i </span><span style=\"color: #859900\">&lt;</span><span style=\"color: #657B83\"> (</span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">&lt;&lt;</span><span style=\"color: #657B83\"> n); i</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">) {</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> j </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">; j </span><span style=\"color: #859900\">&lt;</span><span style=\"color: #657B83\"> n; j</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">) {</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t\t</span><span style=\"color: #859900\">if</span><span style=\"color: #657B83\"> (i </span><span style=\"color: #859900\">&amp;</span><span style=\"color: #657B83\"> (</span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">&lt;&lt;</span><span style=\"color: #657B83\"> j))</span><span style=\"color: #93A1A1; font-style: italic\">//如果 j 这一杯没水。</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t\t\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> k </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">; k </span><span style=\"color: #859900\">&lt;</span><span style=\"color: #657B83\"> n; k</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">)</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t\t\t\t</span><span style=\"color: #859900\">if</span><span style=\"color: #657B83\"> (</span><span style=\"color: #859900\">!</span><span style=\"color: #657B83\">(i </span><span style=\"color: #859900\">&amp;</span><span style=\"color: #657B83\"> (</span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">&lt;&lt;</span><span style=\"color: #657B83\"> k)))</span><span style=\"color: #93A1A1; font-style: italic\">//找到当前有水的杯子，可能在上一步 j 的水倒入了 $k$。</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t\t\t\t\t</span><span style=\"color: #268BD2\">dp</span><span style=\"color: #657B83\">[i] </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">min</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">dp</span><span style=\"color: #657B83\">[i], </span><span style=\"color: #268BD2\">dp</span><span style=\"color: #657B83\">[(i </span><span style=\"color: #859900\">-</span><span style=\"color: #657B83\"> (</span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">&lt;&lt;</span><span style=\"color: #657B83\"> j))] </span><span style=\"color: #859900\">+</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">c</span><span style=\"color: #657B83\">[j][k]);</span><span style=\"color: #93A1A1; font-style: italic\">//一定是 c[j][k]</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t}</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> ans </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #859900\">e</span><span style=\"color: #D33682\">9</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> i </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">; i </span><span style=\"color: #859900\">&lt;</span><span style=\"color: #657B83\"> (</span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">&lt;&lt;</span><span style=\"color: #657B83\"> n); i</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">)</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t</span><span style=\"color: #859900\">if</span><span style=\"color: #657B83\"> (</span><span style=\"color: #268BD2\">__builtin_popcount</span><span style=\"color: #657B83\">(i) </span><span style=\"color: #859900\">&gt;=</span><span style=\"color: #657B83\"> n </span><span style=\"color: #859900\">-</span><span style=\"color: #657B83\"> k)</span><span style=\"color: #93A1A1; font-style: italic\">//也可以写成 n - __builtin_popcount(i) &lt;= k，就是需要 0 的个数小于等于 k，或 1 的个数大于等于 k。</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t\tans </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">min</span><span style=\"color: #657B83\">(ans, </span><span style=\"color: #268BD2\">dp</span><span style=\"color: #657B83\">[i]);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\tcout </span><span style=\"color: #859900\">&lt;&lt;</span><span style=\"color: #657B83\"> ans;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">}</span></span></code></pre></div></div></figure>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>CSP2023 后的第一篇题解<del>还是随机跳题来的</del>捏。</p>\n<p>若蒟蒻有空，会解答评论区的问题的。QwQ。</p>\n<p>蒟蒻可能有笔误，欢迎大佬们来纠正。</p>\n","excerpt":"","more":"<p>一眼丁真：一道<strong>简单的入门的小清新状压好题</strong>。</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>根据题意，每一个杯子只有有水或没水这两种状态。很容易想到用二进制去表示。有水为 $0$，没水为 $1$。</p>\n<p>举个例子，有两个杯子所有杯子都没有水，那么状态为 $11$。</p>\n<p>设 $dp[i]$ 表示从初始状态到状态 $i$ 所需的最小代价。</p>\n<p>另外我们可以想到一个性质，例如说 $x$ 倒入 $y$ 中，$z$ 再倒往 $y$ 中，$y$ 倒入 $k$ 中与 $x$ 倒入 $y$ 中，$y$ 再倒往 $k$ 中，$z$ 倒往 $y$ 中，$y$ 有再一次倒入 $k$ 中是等价的。也就是倒入一个空杯子中与倒往这个杯子没空的时候可能是一样的。所以对于每一个状态 $i$，若当前有一个水杯没有水并且在上一步有水，则肯定是倒给了当前所有有水的杯子中的其中一个，而不是倒入没水的杯中。就不用算重复的情况了。</p>\n<p>那么我们很容易想出转移方程：</p>\n<script type=\"math/tex; mode=display\">dp[i] = \\min(dp[i \\oplus (1 << j)] + c[j][k], dp[i])</script><p>其中 $j$ 表示当前没有水的水杯，$k$ 表示当前有水的水杯，当然 $0 \\le j, k &lt; n$。下标从 $0$ 开始。而 $i \\oplus (1 &lt;&lt; j)$ 表示能转移到 $i$ 这个状态的状态。</p>\n<p>初始化。</p>\n<p>根据题意和定义 $dp[0] = 0$，其余则为正无穷。</p>\n<p>答案就是在合法的状态中取最小值。</p>\n<p>$0$ 的个数小于等于 $k$ 的状态即为合法。</p>\n<p>当然，有一个小地方要注意，从 $x$ 杯倒入 $y$ 杯的价值可能不等于从 $y$ 杯 倒入 $x$ 杯的价值。</p>\n<p>时间复杂度 $O(2^n n^2)$。对于这题够用了。</p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p>下面的 <code>__builtin_popcount(i)</code> 是求出 $i$ 在二进制下有多少个 $1$。</p>\n<p>顺便告诉你，吸个氧就逼近最优解了。</p>\n<figure class=\"shiki cpp\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></div><div class=\"code\"><pre class=\"shiki solarized-light\"><code><span class=\"line\"><span style=\"color: #859900\">#include</span><span style=\"color: #B58900\"> </span><span style=\"color: #2AA198\">&lt;bits/stdc++.h&gt;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">using</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">namespace</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">std</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> n, k, </span><span style=\"color: #268BD2\">dp</span><span style=\"color: #657B83\">[(</span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">&lt;&lt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">20</span><span style=\"color: #657B83\">) </span><span style=\"color: #859900\">+</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">5</span><span style=\"color: #657B83\">], </span><span style=\"color: #268BD2\">c</span><span style=\"color: #657B83\">[</span><span style=\"color: #D33682\">25</span><span style=\"color: #657B83\">][</span><span style=\"color: #D33682\">25</span><span style=\"color: #657B83\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">main</span><span style=\"color: #657B83\">() {</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\tcin </span><span style=\"color: #859900\">&gt;&gt;</span><span style=\"color: #657B83\"> n </span><span style=\"color: #859900\">&gt;&gt;</span><span style=\"color: #657B83\"> k;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #268BD2\">memset</span><span style=\"color: #657B83\">(dp, </span><span style=\"color: #859900\">0x</span><span style=\"color: #D33682\">3f</span><span style=\"color: #657B83\">, sizeof dp);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> i </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">; i </span><span style=\"color: #859900\">&lt;</span><span style=\"color: #657B83\"> n; i</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">)</span><span style=\"color: #93A1A1; font-style: italic\">//下标从 0 开始。</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> j </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">; j </span><span style=\"color: #859900\">&lt;</span><span style=\"color: #657B83\"> n; j</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">)</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t\tcin </span><span style=\"color: #859900\">&gt;&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">c</span><span style=\"color: #657B83\">[i][j];</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #268BD2\">dp</span><span style=\"color: #657B83\">[</span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">] </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> i </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">; i </span><span style=\"color: #859900\">&lt;</span><span style=\"color: #657B83\"> (</span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">&lt;&lt;</span><span style=\"color: #657B83\"> n); i</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">) {</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> j </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">; j </span><span style=\"color: #859900\">&lt;</span><span style=\"color: #657B83\"> n; j</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">) {</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t\t</span><span style=\"color: #859900\">if</span><span style=\"color: #657B83\"> (i </span><span style=\"color: #859900\">&amp;</span><span style=\"color: #657B83\"> (</span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">&lt;&lt;</span><span style=\"color: #657B83\"> j))</span><span style=\"color: #93A1A1; font-style: italic\">//如果 j 这一杯没水。</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t\t\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> k </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">; k </span><span style=\"color: #859900\">&lt;</span><span style=\"color: #657B83\"> n; k</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">)</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t\t\t\t</span><span style=\"color: #859900\">if</span><span style=\"color: #657B83\"> (</span><span style=\"color: #859900\">!</span><span style=\"color: #657B83\">(i </span><span style=\"color: #859900\">&amp;</span><span style=\"color: #657B83\"> (</span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">&lt;&lt;</span><span style=\"color: #657B83\"> k)))</span><span style=\"color: #93A1A1; font-style: italic\">//找到当前有水的杯子，可能在上一步 j 的水倒入了 $k$。</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t\t\t\t\t</span><span style=\"color: #268BD2\">dp</span><span style=\"color: #657B83\">[i] </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">min</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">dp</span><span style=\"color: #657B83\">[i], </span><span style=\"color: #268BD2\">dp</span><span style=\"color: #657B83\">[(i </span><span style=\"color: #859900\">-</span><span style=\"color: #657B83\"> (</span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">&lt;&lt;</span><span style=\"color: #657B83\"> j))] </span><span style=\"color: #859900\">+</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">c</span><span style=\"color: #657B83\">[j][k]);</span><span style=\"color: #93A1A1; font-style: italic\">//一定是 c[j][k]</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t}</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> ans </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #859900\">e</span><span style=\"color: #D33682\">9</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> i </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">; i </span><span style=\"color: #859900\">&lt;</span><span style=\"color: #657B83\"> (</span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">&lt;&lt;</span><span style=\"color: #657B83\"> n); i</span><span style=\"color: #859900\">++</span><span style=\"color: #657B83\">)</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t</span><span style=\"color: #859900\">if</span><span style=\"color: #657B83\"> (</span><span style=\"color: #268BD2\">__builtin_popcount</span><span style=\"color: #657B83\">(i) </span><span style=\"color: #859900\">&gt;=</span><span style=\"color: #657B83\"> n </span><span style=\"color: #859900\">-</span><span style=\"color: #657B83\"> k)</span><span style=\"color: #93A1A1; font-style: italic\">//也可以写成 n - __builtin_popcount(i) &lt;= k，就是需要 0 的个数小于等于 k，或 1 的个数大于等于 k。</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t\t\tans </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">min</span><span style=\"color: #657B83\">(ans, </span><span style=\"color: #268BD2\">dp</span><span style=\"color: #657B83\">[i]);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\tcout </span><span style=\"color: #859900\">&lt;&lt;</span><span style=\"color: #657B83\"> ans;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">\t</span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">}</span></span></code></pre></div></div></figure>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>CSP2023 后的第一篇题解<del>还是随机跳题来的</del>捏。</p>\n<p>若蒟蒻有空，会解答评论区的问题的。QwQ。</p>\n<p>蒟蒻可能有笔误，欢迎大佬们来纠正。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cm0cd3pwh0000pq5x8gid6hz4","category_id":"cm0cd3pwm0001pq5x01je5pc5","_id":"cm0cd3pwn0002pq5x4hmmdxzy"},{"post_id":"cm0cd71kt0003pq5x4fu68xul","category_id":"cm0cd86tm0006pq5x7iejcbsv","_id":"cm0cd86tn0007pq5x7obi25rj"},{"post_id":"cm0cdar0800006k5xhcde89oe","category_id":"cm0cdblzm00016k5x71g33t7j","_id":"cm0cdblzn00026k5x1zl352sv"}],"PostTag":[],"Tag":[]}}